/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forge.form.debug;

import forge.bill.control.DevDebug;
import forge.bill.devdrv.Device.MEMTYPE;
import forge.bill.platform.ForgeSystem;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import nahon.comm.faultsystem.LogCenter;
import nq.dev.drv.IIOData;
import nq.dev.drv.NqDevDriverSearch;

/**
 *
 * @author Administrator
 */
public class DebugPane extends javax.swing.JPanel {

    /**
     * Creates new form DebugPane
     */
    DevDebug debuger = ForgeSystem.GetInstance().GetControlCenter().GetDebuger();

    public DebugPane() {
        initComponents();

        ComboBox_MEM.removeAllItems();
        ComboBox_MEM.addItem(MEMTYPE.EIA);
        ComboBox_MEM.addItem(MEMTYPE.VPA);
        ComboBox_MEM.addItem(MEMTYPE.NVPA);
        ComboBox_MEM.addItem(MEMTYPE.MDA);
        ComboBox_MEM.addItem(MEMTYPE.SRA);

        this.ComboBox_Type.removeAllItems();
        for (String type : MemoryConvert.GetInputType()) {
            ComboBox_Type.addItem(type);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DevicePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        InputMem = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        MEM_LEN = new javax.swing.JTextField();
        ComboBox_MEM = new javax.swing.JComboBox();
        MEM_ADDR = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ComboBox_Type = new javax.swing.JComboBox();
        SET1 = new javax.swing.JButton();
        GET = new javax.swing.JButton();
        CheckBox_listen = new javax.swing.JCheckBox();

        DevicePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("内存调试"));

        InputMem.setColumns(20);
        InputMem.setRows(5);
        jScrollPane1.setViewportView(InputMem);

        jLabel3.setText("类型:");

        jLabel2.setText("长度:");

        MEM_LEN.setText("4");

        ComboBox_MEM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        MEM_ADDR.setText("2");

        jLabel1.setText("地址(10进制):");

        ComboBox_Type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        SET1.setText("写入");
        SET1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SET1ActionPerformed(evt);
            }
        });

        GET.setText("读取");
        GET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GETActionPerformed(evt);
            }
        });

        CheckBox_listen.setText("监听");
        CheckBox_listen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBox_listenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DevicePanelLayout = new javax.swing.GroupLayout(DevicePanel);
        DevicePanel.setLayout(DevicePanelLayout);
        DevicePanelLayout.setHorizontalGroup(
            DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DevicePanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DevicePanelLayout.createSequentialGroup()
                        .addGroup(DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DevicePanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(50, 50, 50))
                            .addComponent(ComboBox_MEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(MEM_ADDR, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(MEM_LEN, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DevicePanelLayout.createSequentialGroup()
                        .addComponent(ComboBox_Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CheckBox_listen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(SET1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GET, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        DevicePanelLayout.setVerticalGroup(
            DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DevicePanelLayout.createSequentialGroup()
                .addGroup(DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBox_MEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_ADDR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MEM_LEN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SET1)
                    .addComponent(GET)
                    .addComponent(ComboBox_Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CheckBox_listen)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DevicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DevicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SET1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SET1ActionPerformed
        try {
            debuger.SetMEM((MEMTYPE) ComboBox_MEM.getSelectedItem(),
                    Integer.valueOf(MEM_ADDR.getText()), Integer.valueOf(MEM_LEN.getText()),
                    MemoryConvert.ConvertMemToByte(this.ComboBox_Type.getSelectedItem().toString(), InputMem.getText()));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            Logger.getGlobal().log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SET1ActionPerformed

    private void GETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GETActionPerformed
        try {
            byte[] value = debuger.GetMEM((MEMTYPE) ComboBox_MEM.getSelectedItem(),
                    Integer.valueOf(MEM_ADDR.getText()), Integer.valueOf(MEM_LEN.getText()));

            if (value != null) {
                String output = MemoryConvert.ConvertByteToString(this.ComboBox_Type.getSelectedItem().toString(), value);

                this.InputMem.setText(output);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            Logger.getGlobal().log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GETActionPerformed

    private void CheckBox_listenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBox_listenActionPerformed
        // TODO add your handling code here:
        if (this.CheckBox_listen.isSelected()) {
            NqDevDriverSearch.RegisterIoShow(new IIOData() {
                @Override
                public void ShowData(IIOData.Dirc dirc, byte[] bytes, String string) {
                    try {
                        String sdata = "";
                        for (byte bdata : bytes) {
                            sdata += String.format("%02X ", bdata);
                        }

                        LogCenter.Instance().PrintLog(Level.INFO, dirc.toString() + ":" + sdata);
                    } catch (Exception ex) {
                    }
                }

            });
        } else {
            NqDevDriverSearch.RegisterIoShow(null);
        }
    }//GEN-LAST:event_CheckBox_listenActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBox_listen;
    private javax.swing.JComboBox ComboBox_MEM;
    private javax.swing.JComboBox ComboBox_Type;
    private javax.swing.JPanel DevicePanel;
    private javax.swing.JButton GET;
    private javax.swing.JTextArea InputMem;
    private javax.swing.JTextField MEM_ADDR;
    private javax.swing.JTextField MEM_LEN;
    private javax.swing.JButton SET1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
